require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe BlogProfilesController do

  def mock_blog_profile(stubs={})
    @mock_blog_profile ||= mock_model(BlogProfile, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all blog_profiles as @blog_profiles" do
      BlogProfile.stub(:all) { [mock_blog_profile] }
      get :index
      assigns(:blog_profiles).should eq([mock_blog_profile])
    end
  end

  describe "GET show" do
    it "assigns the requested blog_profile as @blog_profile" do
      BlogProfile.stub(:find).with("37") { mock_blog_profile }
      get :show, :id => "37"
      assigns(:blog_profile).should be(mock_blog_profile)
    end
  end

  describe "GET new" do
    it "assigns a new blog_profile as @blog_profile" do
      BlogProfile.stub(:new) { mock_blog_profile }
      get :new
      assigns(:blog_profile).should be(mock_blog_profile)
    end
  end

  describe "GET edit" do
    it "assigns the requested blog_profile as @blog_profile" do
      BlogProfile.stub(:find).with("37") { mock_blog_profile }
      get :edit, :id => "37"
      assigns(:blog_profile).should be(mock_blog_profile)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created blog_profile as @blog_profile" do
        BlogProfile.stub(:new).with({'these' => 'params'}) { mock_blog_profile(:save => true) }
        post :create, :blog_profile => {'these' => 'params'}
        assigns(:blog_profile).should be(mock_blog_profile)
      end

      it "redirects to the created blog_profile" do
        BlogProfile.stub(:new) { mock_blog_profile(:save => true) }
        post :create, :blog_profile => {}
        response.should redirect_to(blog_profile_url(mock_blog_profile))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved blog_profile as @blog_profile" do
        BlogProfile.stub(:new).with({'these' => 'params'}) { mock_blog_profile(:save => false) }
        post :create, :blog_profile => {'these' => 'params'}
        assigns(:blog_profile).should be(mock_blog_profile)
      end

      it "re-renders the 'new' template" do
        BlogProfile.stub(:new) { mock_blog_profile(:save => false) }
        post :create, :blog_profile => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested blog_profile" do
        BlogProfile.stub(:find).with("37") { mock_blog_profile }
        mock_blog_profile.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :blog_profile => {'these' => 'params'}
      end

      it "assigns the requested blog_profile as @blog_profile" do
        BlogProfile.stub(:find) { mock_blog_profile(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:blog_profile).should be(mock_blog_profile)
      end

      it "redirects to the blog_profile" do
        BlogProfile.stub(:find) { mock_blog_profile(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(blog_profile_url(mock_blog_profile))
      end
    end

    describe "with invalid params" do
      it "assigns the blog_profile as @blog_profile" do
        BlogProfile.stub(:find) { mock_blog_profile(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:blog_profile).should be(mock_blog_profile)
      end

      it "re-renders the 'edit' template" do
        BlogProfile.stub(:find) { mock_blog_profile(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested blog_profile" do
      BlogProfile.stub(:find).with("37") { mock_blog_profile }
      mock_blog_profile.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the blog_profiles list" do
      BlogProfile.stub(:find) { mock_blog_profile }
      delete :destroy, :id => "1"
      response.should redirect_to(blog_profiles_url)
    end
  end

end
